/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'dave' at '8/10/16 7:59 PM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'jacoco'

war {
    baseName = 'festapivity'
}

sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-cargo-plugin:2.2.3'
    }
}

dependencies {

    ext {
        springVersion = '4.3.2.RELEASE'
        slf4jVersion = '1.7.21'
        mockitoVersion = '1.10.19'
        javaxServletVersion = '3.1.0'
        jacksonVersion = '2.7.4'
        lombokVersion = '1.16.8'
        logbackVersion = '1.1.7'
        jclOverSlf4jVersion = '1.7.21'
        junitVersion = '4.12'
        h2Version = '1.4.192'
        hibernateVersion = '5.2.1.Final'
        springDataVersion = '1.10.2.RELEASE'
        springHateoasVersion = '0.21.0.RELEASE'
    }

    compile "org.slf4j:slf4j-api:${slf4jVersion}"
    compile "org.projectlombok:lombok:${lombokVersion}"
    
    //Web - Rest - Integration
    compile "javax.servlet:javax.servlet-api:${javaxServletVersion}"    
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
    
    //Spring
    compile "org.springframework:spring-core:${springVersion}"
    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-context-support:${springVersion}"
    runtime "org.springframework:spring-web:${springVersion}"
    runtime "org.springframework:spring-tx:${springVersion}"
    compile "org.springframework:spring-oxm:${springVersion}"
    compile "org.springframework:spring-webmvc:${springVersion}"
    compile "org.springframework:spring-jdbc:${springVersion}"
    compile "org.springframework:spring-orm:${springVersion}"
    compile "org.springframework.data:spring-data-jpa:${springDataVersion}"
    compile "org.springframework.hateoas:spring-hateoas:${springHateoasVersion}"
    
    //Test
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.mockito:mockito-all:${mockitoVersion}"
    testCompile "org.springframework:spring-test:${springVersion}"
    
    //Logging
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    compile "org.slf4j:jcl-over-slf4j:${jclOverSlf4jVersion}"
    
    //db
    compile "com.h2database:h2:${h2Version}"
    compile "org.hibernate:hibernate-core:${hibernateVersion}"
    
}

apply plugin: 'com.bmuschko.cargo'
cargo {

    ext {
        port = 8080
        context = 'festapivity'
    }
    containerId = 'tomcat8x'
    port = ext.port

    deployable {
        context = ext.context
    }

    local {
        installer {
            installUrl = 'http://repo1.maven.org/maven2/org/apache/tomcat/tomcat/8.5.4/tomcat-8.5.4.zip'
            downloadDir = file("$buildDir/download")
            extractDir = file("$buildDir/extract")
        }
        homeDir = file('/home/user/dev/tools/apache-tomcat-6.0.32')
        outputFile = file("$buildDir/output.log")
        timeout = 60000
        jvmArgs = '-Duser.timezone=UTC'
    }
}

task printDeploymentMessage {
    println "To test the application browse to http://localhost:${cargo.ext.port}/${cargo.ext.context}/ping"
}

cargoRunLocal.dependsOn (assemble, printDeploymentMessage)

jacoco {
    toolVersion = "0.7.7+"
}

jacocoTestReport {
    reports {
        html {
            enabled true
        }
        
    }
    
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/configuration/**'])
        })
    }
}

test.finalizedBy(project.tasks.jacocoTestReport)
